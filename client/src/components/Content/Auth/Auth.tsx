import React, { useEffect } from 'react';
import styles from './Auth.module.css';

type Props = {
	setUser: (user: returnUserType) => void;
};

const Auth: React.FC<Props> = ({ setUser }) => {
	const authRef = React.createRef<HTMLDivElement>();

	useEffect(() => {
		if (process.env.NODE_ENV === 'production' && 'VK' in window) {
			VK.Widgets.Auth(styles.vk_auth, { onAuth: setUser, width: 200 });
		} else {
			if (process.env.NODE_ENV === 'development') {
				try {
					setUser(JSON.parse(process.env.REACT_APP_USER || ''));
				} catch (e) {
					showError();
				}
			} else {
				showError();
			}
		}
	});

	const showError = () => {
		if (authRef.current) {
			authRef.current.innerText =
				'–ü—Ä–æ—Å—Ç–∏—Ç–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ üòî, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ —Ä–µ–∫–ª–∞–º—ã –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É';
		}
	};

	return (
		<div className={styles.container}>
			<h1>–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –≤–∫–æ–Ω—Ç–∞–∫—Ç–µ</h1>
			<div id={styles.vk_auth} ref={authRef}></div>
		</div>
	);
};

export default Auth;
